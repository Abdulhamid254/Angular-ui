{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n    this.authUrl = `${environment.api.baseUrl}/${environment.api.authUrl}`;\n  }\n  login(authRequest) {\n    return this.http.post(this.authUrl, authRequest);\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,WAAW,QAAQ,mCAAmC;;;AAK/D,OAAM,MAAOC,qBAAqB;EAIhCC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHG,YAAO,GAAG,GAAGH,WAAW,CAACI,GAAG,CAACC,OAAO,IAAIL,WAAW,CAACI,GAAG,CAACE,OAAO,EAAE;EAI9E;EAEJC,KAAK,CAACC,WAAkC;IACtC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAyB,IAAI,CAACH,OAAO,EAAEE,WAAW,CAAC;EAC1E;;AAVWP,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAS,SAArBT,qBAAqB;EAAAU,YAFpB;AAAM","names":["environment","AuthenticationService","constructor","http","api","baseUrl","authUrl","login","authRequest","post","factory","providedIn"],"sourceRoot":"","sources":["E:\\JavaBuilds\\full-stack-professional\\frontend\\angular\\src\\app\\services\\authentication\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthenticationRequest } from '../../models/authentication-request';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationResponse } from '../../models/authentication-response';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private readonly authUrl = `${environment.api.baseUrl}/${environment.api.authUrl}`;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(authRequest: AuthenticationRequest): Observable<AuthenticationResponse> {\r\n    return this.http.post<AuthenticationResponse>(this.authUrl, authRequest);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}