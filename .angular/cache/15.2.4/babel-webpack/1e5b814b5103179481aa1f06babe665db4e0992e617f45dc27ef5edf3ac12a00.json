{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class HttpInterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const authResponse = JSON.parse(storedUser);\n      const token = authResponse.token;\n      if (token) {\n        const authReq = req.clone({\n          headers: new HttpHeaders({\n            Authorization: 'Bearer ' + token\n          })\n        });\n        return next.handle(authReq);\n      }\n    }\n    return next.handle(req);\n  }\n}\nHttpInterceptorService.ɵfac = function HttpInterceptorService_Factory(t) {\n  return new (t || HttpInterceptorService)();\n};\nHttpInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpInterceptorService,\n  factory: HttpInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAiCA,WAAW,QAAsC,sBAAsB;;AAQxG,OAAM,MAAOC,sBAAsB;EAEjCC,eAAgB;EAEhBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,MAAMG,YAAY,GAA2BC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACnE,MAAMM,KAAK,GAAGH,YAAY,CAACG,KAAK;MAChC,IAAIA,KAAK,EAAE;QACT,MAAMC,OAAO,GAAGT,GAAG,CAACU,KAAK,CAAC;UACxBC,OAAO,EAAE,IAAIf,WAAW,CAAC;YACvBgB,aAAa,EAAE,SAAS,GAAGJ;WAC5B;SACF,CAAC;QACF,OAAOP,IAAI,CAACY,MAAM,CAACJ,OAAO,CAAC;;;IAG/B,OAAOR,IAAI,CAACY,MAAM,CAACb,GAAG,CAAC;EACzB;;AAnBWH,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAiB,SAAtBjB,sBAAsB;EAAAkB,YAFrB;AAAM","names":["HttpHeaders","HttpInterceptorService","constructor","intercept","req","next","storedUser","localStorage","getItem","authResponse","JSON","parse","token","authReq","clone","headers","Authorization","handle","factory","providedIn"],"sourceRoot":"","sources":["E:\\JavaBuilds\\full-stack-professional\\frontend\\angular\\src\\app\\services\\interceptor\\http-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationResponse } from '../../models/authentication-response';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const authResponse: AuthenticationResponse = JSON.parse(storedUser);\r\n      const token = authResponse.token;\r\n      if (token) {\r\n        const authReq = req.clone({\r\n          headers: new HttpHeaders({\r\n            Authorization: 'Bearer ' + token\r\n          })\r\n        });\r\n        return next.handle(authReq);\r\n      }\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}