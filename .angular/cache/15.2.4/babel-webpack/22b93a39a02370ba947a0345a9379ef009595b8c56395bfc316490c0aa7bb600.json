{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/customer/customer.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/sidebar\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/confirmdialog\";\nimport * as i8 from \"../menu-bar/menu-bar.component\";\nimport * as i9 from \"../header-bar/header-bar.component\";\nimport * as i10 from \"../manage-customer/manage-customer.component\";\nimport * as i11 from \"../customer-card/customer-card.component\";\nfunction CustomerComponent_app_customer_card_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-customer-card\", 11);\n    i0.ɵɵlistener(\"delete\", function CustomerComponent_app_customer_card_11_Template_app_customer_card_delete_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteCustomer($event));\n    })(\"update\", function CustomerComponent_app_customer_card_11_Template_app_customer_card_update_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateCustomer($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    i0.ɵɵproperty(\"customer\", customer_r1)(\"customerIndex\", index_r2);\n  }\n}\nexport class CustomerComponent {\n  constructor(customerService, messageService, confirmationService) {\n    this.customerService = customerService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.display = false;\n    this.operation = 'create';\n    this.customers = [];\n    this.customer = {};\n  }\n  ngOnInit() {\n    this.findAllCustomers();\n  }\n  findAllCustomers() {\n    this.customerService.findAll().subscribe({\n      next: data => {\n        this.customers = data;\n        console.log(data);\n      }\n    });\n  }\n  save(customer) {\n    if (customer) {\n      if (this.operation === 'create') {\n        this.customerService.registerCustomer(customer).subscribe({\n          next: () => {\n            this.findAllCustomers();\n            this.display = false;\n            this.customer = {};\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Customer saved',\n              detail: `Customer ${customer.name} was successfully saved`\n            });\n          }\n        });\n      } else if (this.operation === 'update') {\n        this.customerService.updateCustomer(customer.id, customer).subscribe({\n          next: () => {\n            this.findAllCustomers();\n            this.display = false;\n            this.customer = {};\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Customer updated',\n              detail: `Customer ${customer.name} was successfully updated`\n            });\n          }\n        });\n      }\n    }\n  }\n  deleteCustomer(customer) {\n    this.confirmationService.confirm({\n      header: 'Delete customer',\n      message: `Are you sure you want to delete ${customer.name}? You can\\'t undo this action afterwords`,\n      accept: () => {\n        this.customerService.deleteCustomer(customer.id).subscribe({\n          next: () => {\n            this.findAllCustomers();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Customer deleted',\n              detail: `Customer ${customer.name} was successfully deleted`\n            });\n          }\n        });\n      }\n    });\n  }\n  updateCustomer(customerDTO) {\n    this.display = true;\n    this.customer = customerDTO;\n    this.operation = 'update';\n  }\n  createCustomer() {\n    this.display = true;\n    this.customer = {};\n    this.operation = 'create';\n  }\n  cancel() {\n    this.display = false;\n    this.customer = {};\n    this.operation = 'create';\n  }\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 14,\n  vars: 6,\n  consts: [[\"styleClass\", \"p-sidebar-lg\", 3, \"visible\", \"position\", \"transitionOptions\", \"visibleChange\"], [3, \"customer\", \"operation\", \"submit\", \"cancel\"], [1, \"flex\", \"align-items-stretch\", 2, \"height\", \"99vh\"], [1, \"flex\", \"flex-column\", \"align-items-stretch\", \"border-right-1\", \"col-2\", \"border-gray-200\"], [1, \"flex\", \"flex-column\", \"flex-grow-1\"], [1, \"main-container\", \"p-3\"], [\"pButton\", \"\", \"icon\", \"pi pi-plus\", \"label\", \"Create customer\", 1, \"p-button-success\", 3, \"click\"], [1, \"flex\", \"justify-content-center\", \"align-items-center\", \"flex-wrap\", \"gap-5\", \"mt-4\"], [3, \"customer\", \"customerIndex\", \"delete\", \"update\", 4, \"ngFor\", \"ngForOf\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\", \"acceptLabel\", \"Delete\", \"acceptButtonStyleClass\", \"p-button-danger\", \"acceptIcon\", \"pi pi-trash\", \"rejectLabel\", \"Cancel\"], [\"position\", \"bottom-center\"], [3, \"customer\", \"customerIndex\", \"delete\", \"update\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-sidebar\", 0);\n      i0.ɵɵlistener(\"visibleChange\", function CustomerComponent_Template_p_sidebar_visibleChange_0_listener($event) {\n        return ctx.display = $event;\n      });\n      i0.ɵɵelementStart(1, \"app-manage-customer\", 1);\n      i0.ɵɵlistener(\"submit\", function CustomerComponent_Template_app_manage_customer_submit_1_listener($event) {\n        return ctx.save($event);\n      })(\"cancel\", function CustomerComponent_Template_app_manage_customer_cancel_1_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"app-menu-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\");\n      i0.ɵɵelement(7, \"app-header-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function CustomerComponent_Template_button_click_9_listener() {\n        return ctx.createCustomer();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵtemplate(11, CustomerComponent_app_customer_card_11_Template, 1, 2, \"app-customer-card\", 8);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(12, \"p-confirmDialog\", 9)(13, \"p-toast\", 10);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"visible\", ctx.display)(\"position\", \"right\")(\"transitionOptions\", \"300ms cubic-bezier(0, 0, 0.2, 1)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"customer\", ctx.customer)(\"operation\", ctx.operation);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ButtonDirective, i5.Sidebar, i6.Toast, i7.ConfirmDialog, i8.MenuBarComponent, i9.HeaderBarComponent, i10.ManageCustomerComponent, i11.CustomerCardComponent],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  background-color: #edf2f7;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jdXN0b21lci9jdXN0b21lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4tY29udGFpbmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMmY3O1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CustomerComponent","constructor","customerService","messageService","confirmationService","ngOnInit","findAllCustomers","findAll","subscribe","next","data","customers","console","log","save","customer","operation","registerCustomer","display","add","severity","summary","detail","name","updateCustomer","id","deleteCustomer","confirm","header","message","accept","customerDTO","createCustomer","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\JavaBuilds\\full-stack-professional\\frontend\\angular\\src\\app\\components\\customer\\customer.component.html","E:\\JavaBuilds\\full-stack-professional\\frontend\\angular\\src\\app\\components\\customer\\customer.component.ts"],"sourcesContent":["<p-sidebar\r\n  [(visible)]=\"display\"\r\n  [position]=\"'right'\"\r\n  [transitionOptions]=\"'300ms cubic-bezier(0, 0, 0.2, 1)'\"\r\n  styleClass=\"p-sidebar-lg\"\r\n>\r\n  <app-manage-customer\r\n    [customer]=\"customer\"\r\n    [operation]=\"operation\"\r\n    (submit)=\"save($event)\"\r\n    (cancel)=\"cancel()\"\r\n  ></app-manage-customer>\r\n</p-sidebar>\r\n\r\n<div class=\"flex align-items-stretch\" style=\"height: 99vh;\">\r\n  <div class=\"flex flex-column align-items-stretch border-right-1 col-2 border-gray-200\">\r\n    <app-menu-bar></app-menu-bar>\r\n  </div>\r\n  <div class=\"flex flex-column flex-grow-1\">\r\n    <div>\r\n      <app-header-bar></app-header-bar>\r\n    </div>\r\n    <div class=\"main-container p-3\">\r\n      <button\r\n        pButton\r\n        icon=\"pi pi-plus\"\r\n        label=\"Create customer\"\r\n        class=\"p-button-success\"\r\n        (click)=\"createCustomer()\"\r\n      >\r\n      </button>\r\n      <div class=\"flex justify-content-center align-items-center flex-wrap gap-5 mt-4\">\r\n        <app-customer-card\r\n          *ngFor=\"let customer of customers; let index = index\"\r\n          [customer]=\"customer\"\r\n          [customerIndex]=\"index\"\r\n          (delete)=\"deleteCustomer($event)\"\r\n          (update)=\"updateCustomer($event)\"\r\n        ></app-customer-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<p-confirmDialog\r\n  header=\"Confirmation\"\r\n  icon=\"pi pi-exclamation-triangle\"\r\n  acceptLabel=\"Delete\"\r\n  acceptButtonStyleClass=\"p-button-danger\"\r\n  acceptIcon=\"pi pi-trash\"\r\n  rejectLabel=\"Cancel\"\r\n></p-confirmDialog>\r\n<p-toast position=\"bottom-center\"></p-toast>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerDTO } from '../../models/customer-dto';\r\nimport { CustomerService } from '../../services/customer/customer.service';\r\nimport { CustomerRegistrationRequest } from '../../models/customer-registration-request';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  display = false;\r\n  operation: 'create' | 'update' = 'create';\r\n  customers: Array<CustomerDTO> = [];\r\n  customer: CustomerRegistrationRequest = {};\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.findAllCustomers();\r\n  }\r\n\r\n\r\n  private findAllCustomers() {\r\n    this.customerService.findAll()\r\n    .subscribe({\r\n      next: (data) => {\r\n        this.customers = data;\r\n        console.log(data);\r\n      }\r\n    })\r\n  }\r\n\r\n  save(customer: CustomerRegistrationRequest) {\r\n    if (customer) {\r\n      if (this.operation === 'create') {\r\n        this.customerService.registerCustomer(customer)\r\n        .subscribe({\r\n          next: () => {\r\n            this.findAllCustomers();\r\n            this.display = false;\r\n            this.customer = {};\r\n            this.messageService.add(\r\n              {severity:'success',\r\n                summary: 'Customer saved',\r\n                detail: `Customer ${customer.name} was successfully saved`\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else if (this.operation === 'update') {\r\n        this.customerService.updateCustomer(customer.id, customer)\r\n        .subscribe({\r\n          next: () => {\r\n            this.findAllCustomers();\r\n            this.display = false;\r\n            this.customer = {};\r\n            this.messageService.add(\r\n              {\r\n                severity:'success',\r\n                summary: 'Customer updated',\r\n                detail: `Customer ${customer.name} was successfully updated`\r\n              }\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteCustomer(customer: CustomerDTO) {\r\n    this.confirmationService.confirm({\r\n      header: 'Delete customer',\r\n      message: `Are you sure you want to delete ${customer.name}? You can\\'t undo this action afterwords`,\r\n      accept: () => {\r\n        this.customerService.deleteCustomer(customer.id)\r\n        .subscribe({\r\n          next: () => {\r\n            this.findAllCustomers();\r\n            this.messageService.add(\r\n              {\r\n                severity:'success',\r\n                summary: 'Customer deleted',\r\n                detail: `Customer ${customer.name} was successfully deleted`\r\n              }\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCustomer(customerDTO: CustomerDTO) {\r\n    this.display = true;\r\n    this.customer = customerDTO;\r\n    this.operation = 'update';\r\n  }\r\n\r\n  createCustomer() {\r\n    this.display = true;\r\n    this.customer = {};\r\n    this.operation = 'create';\r\n  }\r\n\r\n  cancel() {\r\n    this.display = false;\r\n    this.customer = {};\r\n    this.operation = 'create';\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}