{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AccessGuardService {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const authResponse = JSON.parse(storedUser);\n      const token = authResponse.token;\n      if (token) {\n        const jwtHelper = new JwtHelperService();\n        const isTokenNonExpired = !jwtHelper.isTokenExpired(token);\n        if (isTokenNonExpired) {\n          return true;\n        }\n      }\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\nAccessGuardService.ɵfac = function AccessGuardService_Factory(t) {\n  return new (t || AccessGuardService)(i0.ɵɵinject(i1.Router));\n};\nAccessGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccessGuardService,\n  factory: AccessGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,gBAAgB,QAAQ,oBAAoB;;;AAKrD,OAAM,MAAOC,kBAAkB;EAE7BC,YACUC,MAAc;IAAd,WAAM,GAANA,MAAM;EACZ;EAEJC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,MAAMG,YAAY,GAA2BC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACnE,MAAMM,KAAK,GAAGH,YAAY,CAACG,KAAK;MAChC,IAAIA,KAAK,EAAE;QACT,MAAMC,SAAS,GAAG,IAAId,gBAAgB,EAAE;QACxC,MAAMe,iBAAiB,GAAG,CAACD,SAAS,CAACE,cAAc,CAACH,KAAK,CAAC;QAC1D,IAAIE,iBAAiB,EAAE;UACrB,OAAO,IAAI;;;;IAIjB,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;;AAxBWhB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAiB,SAAlBjB,kBAAkB;EAAAkB,YAFjB;AAAM","names":["JwtHelperService","AccessGuardService","constructor","router","canActivate","route","state","storedUser","localStorage","getItem","authResponse","JSON","parse","token","jwtHelper","isTokenNonExpired","isTokenExpired","navigate","factory","providedIn"],"sourceRoot":"","sources":["E:\\JavaBuilds\\full-stack-professional\\frontend\\angular\\src\\app\\services\\guard\\access-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationResponse } from '../../models/authentication-response';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessGuardService implements CanActivate{\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const authResponse: AuthenticationResponse = JSON.parse(storedUser);\r\n      const token = authResponse.token;\r\n      if (token) {\r\n        const jwtHelper = new JwtHelperService();\r\n        const isTokenNonExpired = !jwtHelper.isTokenExpired(token);\r\n        if (isTokenNonExpired) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}